package com.example.fluganzeigetafel.Tests;

import com.example.fluganzeigetafel.Suborders.Suborder;
import org.junit.Test;
import org.junit.*;

public class SubcontractTest {

    @Test
    public void testSubcontractGettersAndSetters() {
        // Create a Subcontract instance
        Suborder suborder = new Suborder();

        // Set values using setter methods
        suborder.setATTBE("ATTBE123");
        suborder.setATTEN("ATTEN456");
        suborder.setAUKEY("AUKEY789");
        suborder.setCBDFK("CBDFKABC");
        suborder.setETTBE("ETTBE123");
        suborder.setETTEN("ETTEN456");
        suborder.setINDNR("INDNR789");
        suborder.setLUPDN("LUPDNABC");
        suborder.setLUPDT("LUPDT123");
        suborder.setLUPDV("LUPDV456");
        suborder.setLZUAU("LZUAU789");
        suborder.setMENGE("MENGEABC");
        suborder.setSTTBE("STTBE123");
        suborder.setSTTEN("STTEN456");
        suborder.setUAKEY("UAKEY789");
        suborder.setUAPIR("UAPIRABC");
        suborder.setUASAA("UASAA123");
        suborder.setUASAU("UASAU456");
        suborder.setXUA("XUA789");
        suborder.setZINFO("ZINFOABC");
        suborder.setDFKEY("DFKEY123");
        suborder.setORTFR("ORTFR456");
        suborder.setORTTO("ORTTO789");
        suborder.setUAART("UAARTABC");
        suborder.setUAREE("UAREE123");
        suborder.setFGKEY("FGKEY456");
        suborder.setUAABF("UAABF789");
        suborder.setREKEY("REKEYABC");
        suborder.setSPREK("SPREK123");
        suborder.setATT30("ATT30123");
        suborder.setATT50("ATT50456");
        suborder.setATT55("ATT55456");
        suborder.setATT60("ATT60567");
        suborder.setATT70("ATT70890");
        suborder.setATT75("ATT75901");
        suborder.setATTER("ATTER234");
        suborder.setUAAGE("UAAGE567");
        suborder.setEINHE("EINHE678");
        suborder.setATT20("ATT20987");
        suborder.setQKB("QKB345");
        suborder.setSAA20("SAA20987");
        suborder.setSAAOF("SAAOF567");
        suborder.setSKA("SKA678");
        suborder.setSTT20("STT20987");
        suborder.setURK("URK567");
        suborder.setRELFK("RELFK678");
        suborder.setUAINF("UAINF345");
        suborder.setETT30("ETT30987");
        suborder.setUAKSL("UAKSL567");
        suborder.setSPKEY("SPKEY678");
        suborder.setMENG2("MENG234");
        suborder.setCINFO("CINFO567");
        suborder.setATT40("ATT40567");
        suborder.setSTLIK("STLIK234");
        suborder.setOKEYN("OKEYN567");
        suborder.setABI("ABI234");
        suborder.setEBI("EBI567");
        suborder.setSBI("SBI234");
        suborder.setTOURK("TOURK567");
        suborder.setEINH2("EINH2567");
        suborder.setEINH3("EINH3567");
        suborder.setEINH4("EINH4567");
        suborder.setMENG3("MENG3567");
        suborder.setMENG4("MENG4567");
        suborder.setXCABA("XCABA567");

        // Test getter methods
        Assert.assertEquals("ATTBE123", suborder.getATTBE());
        Assert.assertEquals("ATTEN456", suborder.getATTEN());
        Assert.assertEquals("AUKEY789", suborder.getAUKEY());
        Assert.assertEquals("CBDFKABC", suborder.getCBDFK());
        Assert.assertEquals("ETTBE123", suborder.getETTBE());
        Assert.assertEquals("ETTEN456", suborder.getETTEN());
        Assert.assertEquals("INDNR789", suborder.getINDNR());
        Assert.assertEquals("LUPDNABC", suborder.getLUPDN());
        Assert.assertEquals("LUPDT123", suborder.getLUPDT());
        Assert.assertEquals("LUPDV456", suborder.getLUPDV());
        Assert.assertEquals("LZUAU789", suborder.getLZUAU());
        Assert.assertEquals("MENGEABC", suborder.getMENGE());
        Assert.assertEquals("STTBE123", suborder.getSTTBE());
        Assert.assertEquals("STTEN456", suborder.getSTTEN());
        Assert.assertEquals("UAKEY789", suborder.getUAKEY());
        Assert.assertEquals("UAPIRABC", suborder.getUAPIR());
        Assert.assertEquals("UASAA123", suborder.getUASAA());
        Assert.assertEquals("UASAU456", suborder.getUASAU());
        Assert.assertEquals("XUA789", suborder.getXUA());
        Assert.assertEquals("ZINFOABC", suborder.getZINFO());
        Assert.assertEquals("DFKEY123", suborder.getDFKEY());
        Assert.assertEquals("ORTFR456", suborder.getORTFR());
        Assert.assertEquals("ORTTO789", suborder.getORTTO());
        Assert.assertEquals("UAARTABC", suborder.getUAART());
        Assert.assertEquals("UAREE123", suborder.getUAREE());
        Assert.assertEquals("FGKEY456", suborder.getFGKEY());
        Assert.assertEquals("UAABF789", suborder.getUAABF());
        Assert.assertEquals("REKEYABC", suborder.getREKEY());
        Assert.assertEquals("SPREK123", suborder.getSPREK());
        Assert.assertEquals("ATT30123", suborder.getATT30());
        Assert.assertEquals("ATT50456", suborder.getATT50());
        Assert.assertEquals("ATT55456", suborder.getATT55());
        Assert.assertEquals("ATT60567", suborder.getATT60());
        Assert.assertEquals("ATT70890", suborder.getATT70());
        Assert.assertEquals("ATT75901", suborder.getATT75());
        Assert.assertEquals("ATTER234", suborder.getATTER());
        Assert.assertEquals("UAAGE567", suborder.getUAAGE());
        Assert.assertEquals("EINHE678", suborder.getEINHE());
        Assert.assertEquals("ATT20987", suborder.getATT20());
        Assert.assertEquals("QKB345", suborder.getQKB());
        Assert.assertEquals("SAA20987", suborder.getSAA20());
        Assert.assertEquals("SAAOF567", suborder.getSAAOF());
        Assert.assertEquals("SKA678", suborder.getSKA());
        Assert.assertEquals("STT20987", suborder.getSTT20());
        Assert.assertEquals("URK567", suborder.getURK());
        Assert.assertEquals("RELFK678", suborder.getRELFK());
        Assert.assertEquals("UAINF345", suborder.getUAINF());
        Assert.assertEquals("ETT30987", suborder.getETT30());
        Assert.assertEquals("UAKSL567", suborder.getUAKSL());
        Assert.assertEquals("SPKEY678", suborder.getSPKEY());
        Assert.assertEquals("MENG234", suborder.getMENG2());
        Assert.assertEquals("CINFO567", suborder.getCINFO());
        Assert.assertEquals("ATT40567", suborder.getATT40());
        Assert.assertEquals("STLIK234", suborder.getSTLIK());
        Assert.assertEquals("OKEYN567", suborder.getOKEYN());
        Assert.assertEquals("ABI234", suborder.getABI());
        Assert.assertEquals("EBI567", suborder.getEBI());
        Assert.assertEquals("SBI234", suborder.getSBI());
        Assert.assertEquals("TOURK567", suborder.getTOURK());
        Assert.assertEquals("EINH2567", suborder.getEINH2());
        Assert.assertEquals("EINH3567", suborder.getEINH3());
        Assert.assertEquals("EINH4567", suborder.getEINH4());
        Assert.assertEquals("MENG3567", suborder.getMENG3());
        Assert.assertEquals("MENG4567", suborder.getMENG4());
        Assert.assertEquals("XCABA567", suborder.getXCABA());
    }
}
